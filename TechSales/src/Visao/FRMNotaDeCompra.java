/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.CaixaControle;
import Controle.CategoriaControle;
import Controle.ConsoleControle;
import Controle.JogoControle;
import Controle.LucroControle;
import Controle.NotaDeCompraAPrazoControle;
import Controle.NotaDeCompraControle;
import Modelo.CaixaBEAN;
import Modelo.CategoriaBEAN;
import Modelo.ConsoleBEAN;
import Modelo.JogoBEAN;
import Modelo.NotaDeCompraPrazoBEAN;
import Modelo.NotaDecompraBEAN;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Alef
 */
public class FRMNotaDeCompra extends javax.swing.JFrame {

    private ConsoleControle cControle = new ConsoleControle();
    private CategoriaControle catControle = new CategoriaControle();
    private CaixaControle cCaixa = new CaixaControle();
    private ArrayList<CategoriaBEAN> catDados;
    private ArrayList<ConsoleBEAN> cDados;
    private JogoControle jControle = new JogoControle();
    private NotaDeCompraControle notac = new NotaDeCompraControle();
    private NotaDeCompraAPrazoControle napC = new NotaDeCompraAPrazoControle();
    private LucroControle lucroc = new LucroControle();
    private ArrayList<JogoBEAN> jDados;
    private ArrayList<NotaDecompraBEAN> ncDados;
    private ArrayList<NotaDeCompraPrazoBEAN> napDados;
    private DefaultTableModel dtJogo;
    private DefaultTableModel dtNota;
    private DefaultTableModel dtPrazos;
    private DefaultTableModel dtNotaPrazo;
    private ArrayList<NotaDeCompraPrazoBEAN> insert = new ArrayList<NotaDeCompraPrazoBEAN>();
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    private int cod = 0;

    /**
     * Creates new form FRMNotaDeCompra
     */
    public FRMNotaDeCompra() {
        initComponents();
        preencheTabelaJogo();
        preencheTabelaNota();
        JogoBEAN jogo = FRMJogo.jogoNota;
        for (NotaDecompraBEAN n : notac.listarALL()) {
            if (n.getJogo().getJoCodigo() == jogo.getJoCodigo()) {
                tpGuia.setSelectedIndex(1);
                JOptionPane.showMessageDialog(null, "Esse jogo ja possui nota de compra CADASTRADA, código da nota:" + n.getNdcCodigo());
            } else {

            }
        }
        setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpGuia = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jpCompra = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableM = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        tfQtde = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tfPrecoTT = new javax.swing.JTextField();
        tfValorEntrada = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tfNParcelas = new javax.swing.JTextField();
        tfPrecoUnit = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tfDataCompra = new javax.swing.JFormattedTextField();
        lbCodNota = new javax.swing.JLabel();
        lbCodigoJogo = new javax.swing.JLabel();
        btEditParcela = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btCadastrar = new javax.swing.JButton();
        btLocalizar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tables = new javax.swing.JScrollPane();
        tableNotas = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btSelecNota = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        tfRefinarNota = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        tables1 = new javax.swing.JScrollPane();
        tablePrazo = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jbPagar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableJogo = new javax.swing.JTable();
        tfRefinarJogo = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btCadNota1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpCompra.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados da compra", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jButton1.setText("calcular parcelas");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Preço Unitario :");

        tableM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num.Parcela", "Data", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableM.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableM);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Quantidade :");

        tfQtde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfQtdeKeyTyped(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Preço Total:");

        tfPrecoTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrecoTTActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Valor de entrada:");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setText("Número de parcelas:");

        jLabel19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel19.setText("Data da Compra:");

        try{
            javax.swing.text.MaskFormatter faixa= new javax.swing.text.MaskFormatter("##/##/####");
            tfDataCompra = new javax.swing.JFormattedTextField(faixa);
        }
        catch (Exception e){
        }

        lbCodNota.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbCodNota.setText("...");
        lbCodNota.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Código da Nota", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lbCodigoJogo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbCodigoJogo.setText("...");
        lbCodigoJogo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Código do Jogo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btEditParcela.setText("editar parcela");
        btEditParcela.setEnabled(false);
        btEditParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditParcelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCompraLayout = new javax.swing.GroupLayout(jpCompra);
        jpCompra.setLayout(jpCompraLayout);
        jpCompraLayout.setHorizontalGroup(
            jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCompraLayout.createSequentialGroup()
                .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCompraLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCompraLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(30, 30, 30)
                                .addComponent(tfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbCodNota, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCodigoJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpCompraLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel15)
                        .addGap(4, 4, 4)
                        .addComponent(tfValorEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(tfPrecoUnit))
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfPrecoTT, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfNParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1))
                .addGap(66, 66, 66)
                .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpCompraLayout.createSequentialGroup()
                        .addComponent(btEditParcela)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpCompraLayout.setVerticalGroup(
            jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCompraLayout.createSequentialGroup()
                .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpCompraLayout.createSequentialGroup()
                        .addComponent(lbCodNota, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbCodigoJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tfQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpCompraLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel15))
                            .addComponent(tfValorEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btEditParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jpCompraLayout.createSequentialGroup()
                            .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfPrecoUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addGap(5, 5, 5)
                            .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(tfNParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(tfPrecoTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(jpCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Menu de opções", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btCadastrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCadastrar.setText("Gravar");
        btCadastrar.setEnabled(false);
        btCadastrar.setMaximumSize(new java.awt.Dimension(73, 23));
        btCadastrar.setMinimumSize(new java.awt.Dimension(73, 23));
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btLocalizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btLocalizar.setText("Localizar Nota");
        btLocalizar.setEnabled(false);
        btLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLocalizarActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setText("Localizar jogo");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton7.setText("Novo dado");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton6.setText("Fechar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton8.setText("Cancelar");
        jButton8.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tpGuia.addTab("Cadastrar Nota de compra", jPanel1);

        tableNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tables.setViewportView(tableNotas);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Menu de opções", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btSelecNota.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btSelecNota.setText("Editar Nota");
        btSelecNota.setEnabled(false);
        btSelecNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecNotaActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setText("Localizar Parcelas");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSelecNota)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSelecNota)
                    .addComponent(jButton4))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tfRefinarNota.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Refinar Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        tfRefinarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRefinarNotaActionPerformed(evt);
            }
        });
        tfRefinarNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfRefinarNotaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfRefinarNotaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(234, 234, 234)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(tfRefinarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 236, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tables)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfRefinarNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tables, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpGuia.addTab("Lista de Notas ", jPanel2);

        tables1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tables1MouseClicked(evt);
            }
        });

        tablePrazo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePrazo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePrazoMouseClicked(evt);
            }
        });
        tables1.setViewportView(tablePrazo);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Menu de opções", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jbPagar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbPagar.setText("Pagar Parcela");
        jbPagar.setEnabled(false);
        jbPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbPagar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbPagar)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tables1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(302, 302, 302))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(tables1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tpGuia.addTab("Lista de Parcelas", jPanel4);

        tableJogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableJogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableJogoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableJogo);

        tfRefinarJogo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Refinar Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        tfRefinarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRefinarJogoActionPerformed(evt);
            }
        });
        tfRefinarJogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfRefinarJogoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfRefinarJogoKeyTyped(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Menu de opções", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        btCadNota1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btCadNota1.setText("Cadastrar Nota de Compra");
        btCadNota1.setEnabled(false);
        btCadNota1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadNota1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCadNota1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCadNota1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(tfRefinarJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfRefinarJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tpGuia.addTab("Lista de Jogos", jPanel5);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Nota De Compra");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(jLabel1))
            .addComponent(tpGuia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpGuia))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparCampos() {
        lbCodigoJogo.setText("...");
        lbCodNota.setText("...");
        tfPrecoUnit.setText("");
        tfQtde.setText("");
        tfValorEntrada.setText("");
        tfPrecoTT.setText("");
        tfDataCompra.setText("");
        tfNParcelas.setText("");
        tfDataParcela2.setText("");
        tfPrecoParcela2.setText("");

    }

    private boolean verificaCampos() {
        if (tfPrecoUnit.getText().equals("") || tfQtde.getText().equals("")
                || tfValorEntrada.getText().equals("") || tfPrecoTT.getText().equals("")
                || tfNParcelas.getText().equals("")
                || tfDataCompra.getText().equals("")
                || lbCodigoJogo.getText().equals("...")) {
            return false;
        } else {
            return true;
        }
    }

    private int verificarInserir() {
        int j = 0;
        for (NotaDeCompraPrazoBEAN a : insert) {
            j++;
        }
        System.out.println(j);
        return j;
    }

    private void resultado() {
        insert.clear();
        preencheTabelaPrazos();
        preencheTabelaNota();

        limparCampos();
        JOptionPane.showMessageDialog(null, "Notas CADASTRADAS com sucesso");
    }

    private void cadastroInserir() {
        NotaDecompraBEAN ndc = new NotaDecompraBEAN();
        ndc.setNdcCustoUnitario(Float.parseFloat(tfPrecoUnit.getText()));
        ndc.setNdcQtdComprada(Integer.parseInt(tfQtde.getText()));
        ndc.setNdcEntrada(Float.parseFloat(tfValorEntrada.getText()));
        ndc.setNdcPrecoTotal(Float.parseFloat(tfPrecoTT.getText()));

        try {
            String dataString = tfDataCompra.getText();
            DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data = new java.sql.Date(fmt.parse(dataString).getTime());
            ndc.setNdcData(data);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        ndc.setNdcParcelas(Integer.parseInt(tfNParcelas.getText()));

        JogoBEAN jogo = jControle.localizarCodigo(Integer.parseInt(lbCodigoJogo.getText()));
        ndc.setJogo(jogo);
        notac.cadastrar(ndc);

        CaixaBEAN caixa = cCaixa.localizar(1);
        caixa.setCaixaDinheiro(caixa.getCaixaDinheiro() - ndc.getNdcEntrada());
        cCaixa.editar(caixa);

        for (NotaDeCompraPrazoBEAN ndca : insert) {
            NotaDeCompraPrazoBEAN nota = new NotaDeCompraPrazoBEAN();
            nota.setNapData(ndca.getNapData());
            nota.setNapValor(ndca.getNapValor());
            nota.setNapNumParcela(ndca.getNapNumParcela());
            nota.setNapSituacao("Pendente");
            nota.setNota(ndc);
            napC.cadastrar(nota);
        }
        resultado();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int t = Integer.parseInt(tfNParcelas.getText());
        float precoTT = Float.parseFloat((tfPrecoTT.getText()));
        float precoParcelaTT = precoTT - Float.parseFloat((tfValorEntrada.getText()));
        for (int c = 1; c <= t; c++) {

            java.sql.Date data = null;
            try {
                String dataString = tfDataCompra.getText();
                DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
                data = new java.sql.Date(fmt.parse(dataString).getTime());
            } catch (ParseException e) {
                e.printStackTrace();
            }

            NotaDeCompraPrazoBEAN nota = new NotaDeCompraPrazoBEAN();
            int m = data.getMonth();
            data.setMonth(m + c);
            nota.setNapValor(precoParcelaTT / t);
            nota.setNapNumParcela(c);
            nota.setNapData(data);
            insert.add(nota);
        }
        preencheTabelaPrazos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tableMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMMouseClicked
        int i = tableM.getSelectedRow();
    }//GEN-LAST:event_tableMMouseClicked

    private void tfQtdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQtdeKeyTyped
        String caracteres = "0123456789";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_tfQtdeKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int i = tableM.getSelectedRow();
        if (i != -1) {
            insert.remove(i);
            preencheTabelaPrazos();
        } else {
            JOptionPane.showMessageDialog(null, " Selecione alguma linha na tabela");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tfPrecoTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrecoTTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPrecoTTActionPerformed

    private void cadastroNormal() {
        NotaDecompraBEAN ndc = new NotaDecompraBEAN();
        ndc.setNdcCustoUnitario(Float.parseFloat(tfPrecoUnit.getText()));
        ndc.setNdcQtdComprada(Integer.parseInt(tfQtde.getText()));
        ndc.setNdcEntrada(Float.parseFloat(tfValorEntrada.getText()));
        ndc.setNdcPrecoTotal(Float.parseFloat(tfPrecoTT.getText()));

        try {
            String dataString = tfDataCompra.getText();
            DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data = new java.sql.Date(fmt.parse(dataString).getTime());
            ndc.setNdcData(data);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        ndc.setNdcParcelas(Integer.parseInt(tfNParcelas.getText()));
        JogoBEAN jogo = jControle.localizarCodigo(Integer.parseInt(lbCodigoJogo.getText()));
        ndc.setJogo(jogo);
        notac.cadastrar(ndc);

        CaixaBEAN caixa = cCaixa.localizar(1);
        caixa.setCaixaDinheiro(caixa.getCaixaDinheiro() - ndc.getNdcEntrada());
        cCaixa.editar(caixa);

        limparCampos();
        preencheTabelaNota();
    }

    private void preencheTabelaPrazos() {
        dtPrazos = criaTabelaPrazos();
        dtPrazos.addColumn("Num.Parcela");
        dtPrazos.addColumn("Data");
        dtPrazos.addColumn("Preço");

        for (NotaDeCompraPrazoBEAN o : insert) {
            dtPrazos.addRow(new Object[]{o.getNapNumParcela(),
                o.getNapData(), o.getNapValor()});
        }

        tableM.setModel(dtPrazos);
    }

    private DefaultTableModel criaTabelaPrazos() {
        DefaultTableModel dTable2 = new DefaultTableModel() {
            Class[] types = new Class[]{
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.Float.class,};
            boolean[] canEdit = new boolean[]{
                false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;
        };
    return dTable2;
    }

    private void preencheTabelaJogo() {
        dtJogo = criaTabelaJogo();
        dtJogo.addColumn("Código");
        dtJogo.addColumn("Nome");
        dtJogo.addColumn("Fornecedor");
        dtJogo.addColumn("Faixa Etária");
        dtJogo.addColumn("Preço Padrão");
        dtJogo.addColumn("Tipo de Jogo");
        dtJogo.addColumn("Categoria");
        dtJogo.addColumn("Console");
        dtJogo.addColumn("Lote");
        dtJogo.addColumn("Quantidade");
        //pega os dados do ArrayList
        jDados = jControle.listarALL();
        catDados = catControle.listarALL();
        cDados = cControle.listarALL();
        int nqtd = 0;
        for (JogoBEAN dado : jDados) {
            for (CategoriaBEAN dado2 : catDados) {
                if (dado.getCat().getCatCodigo() == dado2.getCatCodigo()) {
                    for (ConsoleBEAN c : cDados) {
                        if (dado.getConsole().getConCodigo() == c.getConCodigo()) {
                            for (NotaDecompraBEAN n : notac.listarALL()) {
                                if (n.getJogo().getJoCodigo() == dado.getJoCodigo()) {
                                    nqtd++;
                                }
                            }
                            if (nqtd == 0) {
                                dtJogo.addRow(new Object[]{dado.getJoCodigo(), dado.getJoNome(), dado.getFornecedor(),
                                    dado.getJoFaixaEtaria(), dado.getJoPrecoPadrao(), dado.getJoTipo(),
                                    dado2.getCatNome(), c.getConNome(), dado.getJoLote(), dado.getJoQtd()});
                            }

                        }
                    }
                }
            }
            nqtd = 0;
        }
        tableJogo.setModel(dtJogo);
    }

    private DefaultTableModel criaTabelaJogo() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Double.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void preencheTabelaNota() {
        dtNota = criaTabelaNota();
        dtNota.addColumn("Código");
        dtNota.addColumn("Data");
        dtNota.addColumn("Preço Total");
        dtNota.addColumn("Numero de Parcelas");
        dtNota.addColumn("Entrada");
        dtNota.addColumn("Código do jogo");
        dtNota.addColumn("Preço Unitário");
        dtNota.addColumn("Quantidade Comprada");

        for (NotaDecompraBEAN n : notac.listarALL()) {
            dtNota.addRow(new Object[]{n.getNdcCodigo(), n.getNdcData(), n.getNdcPrecoTotal(),
                n.getNdcParcelas(), n.getNdcEntrada(), n.getJogo().getJoCodigo(), n.getNdcCustoUnitario(), n.getNdcQtdComprada()});
        }
        tableNotas.setModel(dtNota);
    }

    private DefaultTableModel criaTabelaNota() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Float.class,
                java.lang.String.class,
                java.lang.Float.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.Float.class,
                java.lang.Integer.class
            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
    return dTable;
    }

    private void preencheTabelaNotaPrazo(int cod) {
        dtNotaPrazo = criaTabelaNotaPrazo();
        dtNotaPrazo.addColumn("Código");
        dtNotaPrazo.addColumn("Data");
        dtNotaPrazo.addColumn("Valor da Parcela");
        dtNotaPrazo.addColumn("Numero da Parcela");
        dtNotaPrazo.addColumn("Codigo da Nota De Compra");
        dtNotaPrazo.addColumn("Situação");

        napDados = napC.listarALL();
        for (NotaDeCompraPrazoBEAN n : napDados) {
            if (n.getNota().getNdcCodigo() == cod) {
                dtNotaPrazo.addRow(new Object[]{n.getNapCodigo(), n.getNapData(), n.getNapValor(),
                    n.getNapNumParcela(), n.getNota().getNdcCodigo(), n.getNapSituacao()});
            }
        }

        tablePrazo.setModel(dtNotaPrazo);
    }

    private DefaultTableModel criaTabelaNotaPrazo() {
        //sempre que usar JTable é necessário ter um DefaulttableModel
        DefaultTableModel dTable = new DefaultTableModel() {
            //Define o tipo dos campos (coluna) na mesma ordem que as colunas foram criadas
            Class[] types = new Class[]{
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.Float.class,
                java.lang.Integer.class,
                java.lang.Integer.class,
                java.lang.String.class

            };
            //define se os campos podem ser editados na propria tabela
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false};

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        ;

        };
        //retorna o DefaultTableModel
    return dTable;
    }

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        int z = verificarInserir();
        if (verificaCampos()) {
            if (lbCodNota.getText().equals("...")) {
                if (z == 0) {
                    cadastroNormal();
                    JOptionPane.showMessageDialog(null, "Nota Cadastrada com sucesso.");
                } else {
                    cadastroInserir();
                }
            } else {
                editar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Erro!Preencha todos os campos.");
        }

    }//GEN-LAST:event_btCadastrarActionPerformed

    private void editar() {
        if (verificaCampos() == true) {
            NotaDecompraBEAN ndc = notac.localizar(Integer.parseInt(lbCodNota.getText()));
            ndc.setNdcCustoUnitario(Float.parseFloat(tfPrecoUnit.getText()));
            ndc.setNdcQtdComprada(Integer.parseInt(tfQtde.getText()));
            ndc.setNdcEntrada(Float.parseFloat(tfValorEntrada.getText()));
            ndc.setNdcPrecoTotal(Float.parseFloat(tfPrecoTT.getText()));
            ndc.setNdcParcelas(Integer.parseInt(tfNParcelas.getText()));
            try {
                String dataString = tfDataCompra.getText();
                DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
                java.sql.Date data = new java.sql.Date(fmt.parse(dataString).getTime());
                ndc.setNdcData(data);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            JogoBEAN jogo = jControle.localizarCodigo(Integer.parseInt(lbCodigoJogo.getText()));
            ndc.setJogo(jogo);
            boolean retorno = notac.editar(ndc);
            if (retorno == true) {
                JOptionPane.showMessageDialog(null, "Jogo MODIFICADO com sucesso");
                this.preencheTabelaNota();
                this.preencheTabelaPrazos();
                this.limparCampos();
            } else {
                JOptionPane.showMessageDialog(null, "ERRO na EDIÇÃO");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Erro! Insira todos os valores");
        }
    }
    private void btLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLocalizarActionPerformed
        preencheTabelaNota();
        tpGuia.setSelectedIndex(1);
    }//GEN-LAST:event_btLocalizarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        tpGuia.setSelectedIndex(3);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableJogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableJogoMouseClicked
        tpGuia.setSelectedIndex(0);
        if (tableJogo.getSelectedRow() != -1) {
            JogoBEAN j = jControle.localizarCodigo(Integer.parseInt(tableJogo.getValueAt(tableJogo.getSelectedRow(), 0).toString()));
            lbCodigoJogo.setText(String.valueOf(j.getJoCodigo()));
            tfQtde.setText(String.valueOf(j.getJoQtd()));
        } else {
            JOptionPane.showMessageDialog(null, "Erro, jogo não disponível no estoque");
        }
    }//GEN-LAST:event_tableJogoMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (tableNotas.getSelectedRow() != -1) {
            NotaDecompraBEAN n = notac.localizar(Integer.parseInt(tableNotas.getValueAt(tableNotas.getSelectedRow(), 0).toString()));
            cod = n.getNdcCodigo();
        }
        preencheTabelaNotaPrazo(cod);
        tpGuia.setSelectedIndex(2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPagarActionPerformed
        NotaDeCompraPrazoBEAN j = napC.localizar(Integer.parseInt(lbCodPar.getText()));
        j.setNapSituacao("Paga");
        CaixaBEAN caixa = cCaixa.localizar(1);
        caixa.setCaixaDinheiro(caixa.getCaixaDinheiro() - j.getNapValor());
        cCaixa.editar(caixa);
        boolean retorno = napC.editar(j);
        if (retorno == true) {
            JOptionPane.showMessageDialog(null, "Nota MODIFICADA com sucesso");
            this.preencheTabelaNota();
            this.preencheTabelaPrazos();
            this.preencheTabelaNotaPrazo(cod);
            this.limparCampos();
        } else {
            JOptionPane.showMessageDialog(null, "ERRO na EDIÇÃO");
        }
    }//GEN-LAST:event_jbPagarActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tables1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tables1MouseClicked

    }//GEN-LAST:event_tables1MouseClicked

    private void tablePrazoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePrazoMouseClicked
        if (tablePrazo.getSelectedRow() != -1) {
            NotaDeCompraPrazoBEAN j = napC.localizar(Integer.parseInt(tablePrazo.getValueAt(tablePrazo.getSelectedRow(), 0).toString()));
            lbCodPar.setText(String.valueOf(j.getNapCodigo()));
            tfPrecoParcela2.setText(String.valueOf(j.getNapValor()));
        } else {
            JOptionPane.showMessageDialog(null, "Erro, nota não disponível no estoque");
        }
    }//GEN-LAST:event_tablePrazoMouseClicked

    private void btEditParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditParcelaActionPerformed

    }//GEN-LAST:event_btEditParcelaActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

    }//GEN-LAST:event_jButton7ActionPerformed

    private void btCadNota1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadNota1ActionPerformed

    }//GEN-LAST:event_btCadNota1ActionPerformed

    private void tfRefinarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRefinarNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarNotaActionPerformed

    private void tfRefinarNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRefinarNotaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarNotaKeyPressed

    private void tfRefinarNotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRefinarNotaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarNotaKeyTyped

    private void tfRefinarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRefinarJogoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarJogoActionPerformed

    private void tfRefinarJogoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRefinarJogoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarJogoKeyPressed

    private void tfRefinarJogoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfRefinarJogoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRefinarJogoKeyTyped

    private void btSelecNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecNotaActionPerformed
        limparCampos();
        tpGuia.setSelectedIndex(0);
        if (tableNotas.getSelectedRow() != -1) {
            NotaDecompraBEAN n = notac.localizar(Integer.parseInt(tableNotas.getValueAt(tableNotas.getSelectedRow(), 0).toString()));
            lbCodNota.setText(String.valueOf(n.getNdcCodigo()));
            lbCodigoJogo.setText(String.valueOf(n.getJogo().getJoCodigo()));
            tfPrecoUnit.setText(String.valueOf(n.getNdcCustoUnitario()));
            tfQtde.setText(String.valueOf(n.getNdcQtdComprada()));
            tfValorEntrada.setText(String.valueOf(n.getNdcEntrada()));
            tfPrecoTT.setText(String.valueOf(n.getNdcPrecoTotal()));
            tfDataCompra.setText(String.valueOf(n.getNdcData()));
            tfNParcelas.setText(String.valueOf(n.getNdcParcelas()));
        } else {
            JOptionPane.showMessageDialog(null, "Erro, nota não disponível no estoque");
        }
    }//GEN-LAST:event_btSelecNotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMNotaDeCompra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMNotaDeCompra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMNotaDeCompra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMNotaDeCompra.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRMNotaDeCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadNota1;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btEditParcela;
    private javax.swing.JButton btLocalizar;
    private javax.swing.JButton btSelecNota;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbPagar;
    private javax.swing.JPanel jpCompra;
    private javax.swing.JLabel lbCodNota;
    private javax.swing.JLabel lbCodigoJogo;
    private javax.swing.JTable tableJogo;
    private javax.swing.JTable tableM;
    private javax.swing.JTable tableNotas;
    private javax.swing.JTable tablePrazo;
    private javax.swing.JScrollPane tables;
    private javax.swing.JScrollPane tables1;
    private javax.swing.JFormattedTextField tfDataCompra;
    private javax.swing.JTextField tfNParcelas;
    private javax.swing.JTextField tfPrecoTT;
    private javax.swing.JTextField tfPrecoUnit;
    private javax.swing.JTextField tfQtde;
    private javax.swing.JTextField tfRefinarJogo;
    private javax.swing.JTextField tfRefinarNota;
    private javax.swing.JTextField tfValorEntrada;
    private javax.swing.JTabbedPane tpGuia;
    // End of variables declaration//GEN-END:variables
}
